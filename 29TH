#include <stdio.h>
#define MAX_PARTITIONS 5
#define MAX_PROCESSES 5
void firstFit(int partitions[], int n, int processes[], int m)
{
    int allocation[MAX_PROCESSES];

    for (int i = 0; i < m; i++) 
    {
     allocation[i] = -1;
        for (int j = 0; j < n; j++) 
        {
            if (processes[i] <= partitions[j])
            {
                allocation[i] = j; 
                partitions[j] -= processes[i]; 
                break;
            }
        }
    }

    printf("Process\tProcess Size\tPartition\n");
    for (int i = 0; i < m; i++)
    {
        printf("P%d\t%d KB\t\t", i + 1, processes[i]);
        if (allocation[i] != -1)
        {
            printf("Partition %d\n", allocation[i] + 1);
        } 
        else 
        {
            printf("Not Allocated\n");
        }
    }
}

int main() 
{
    int partitions[MAX_PARTITIONS] = {40, 10, 30, 60}; // Memory partitions (in KB)
    int processes[MAX_PROCESSES] = {100, 50, 30, 120, 35}; // Processes (in KB)

    firstFit(partitions, MAX_PARTITIONS, processes, MAX_PROCESSES);

    return 0;
}
