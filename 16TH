#include <stdio.h>

#define MAX_PROCESSES 10

struct process
{
    int burst_time;
    int waiting_time;
    int turnaround_time;
}

int main()
{
    struct process processes[MAX_PROCESSES];
    int num_processes;
    float total_waiting_time = 0;
    float total_turnaround_time = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &num_processes);

    for (int i = 0; i < num_processes; i++)
    {
        printf("Enter burst time for process P%d: ", i + 1);
        scanf("%d", &processes[i].burst_time);
  }
    processes[0].waiting_time = 0;
    processes[0].turnaround_time = processes[0].burst_time;
    for (int i = 1; i < num_processes; i++)
    {
        processes[i].waiting_time = processes[i - 1].turnaround_time;
        processes[i].turnaround_time = processes[i].waiting_time + processes[i].burst_time;
    }

    for (int i = 0; i < num_processes; i++)
    {
        total_waiting_time += processes[i].waiting_time;
        total_turnaround_time += processes[i].turnaround_time;
    }

    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < num_processes; i++) 
    {
        printf("P%d\t%d\t\t%d\t\t%d\n", i + 1, processes[i].burst_time, processes[i].waiting_time, processes[i].turnaround_time);
    }
    printf("\nAverage waiting time: %.2f\n", total_waiting_time / num_processes);
    printf("Average turnaround time: %.2f\n", total_turnaround_time / num_processes);

    return 0;
}
